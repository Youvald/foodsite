import requests
from decimal import Decimal
from django.conf import settings
from datetime import datetime, timedelta, timezone

api_key = settings.BSCSCAN_API_KEY
base_url = 'https://api.bscscan.com/api'


def check_bsc_transaction(address, expected_amount, created_after=None, contract_address=None) -> bool:
    """
    –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –±—É–ª–∞ –≤—Ö—ñ–¥–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è –Ω–∞ –∑–∞–¥–∞–Ω—É –∞–¥—Ä–µ—Å—É –∑ –æ—á—ñ–∫—É–≤–∞–Ω–æ—é —Å—É–º–æ—é.
    –ü—Ä–∞—Ü—é—î —è–∫ –¥–ª—è BNB, —Ç–∞–∫ —ñ –¥–ª—è —Ç–æ–∫–µ–Ω—ñ–≤ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ USDT, USDC).
    """
    address = address.lower()
    is_token = contract_address is not None

    # –û–±–∏—Ä–∞—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
    params = {
        'module': 'account',
        'action': 'tokentx' if is_token else 'txlist',
        'address': address,
        'sort': 'desc',
        'apikey': api_key
    }

    response = requests.get(base_url, params=params)
    if response.status_code != 200:
        print("–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É:", response.text)
        return False

    transactions = response.json().get('result', [])

    for tx in transactions:
        if tx.get('to', '').lower() != address:
            continue

        if created_after:
            timestamp = int(tx.get('timeStamp', 0))
            tx_time = datetime.fromtimestamp(timestamp, tz=timezone.utc)
            if tx_time <= (created_after - timedelta(hours=3)):
                continue

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∑–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–º
        if is_token:
            if tx.get('contractAddress', '').lower() != contract_address.lower():
                continue
            token_decimals = int(tx.get('tokenDecimal', 18))
            value = Decimal(tx.get('value')) / Decimal(10 ** token_decimals)
        else:
            # –î–ª—è BNB
            value = Decimal(tx.get('value')) / Decimal(10 ** 18)

        # –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –∑ –ø–æ—Ö–∏–±–∫–æ—é
        if abs(value - expected_amount) < Decimal("0.000001"):
            print("üîç –ó–Ω–∞–π–¥–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é:", tx)
            return True

    return False
